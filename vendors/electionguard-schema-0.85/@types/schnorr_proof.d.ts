/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The one-use public key `k = g ≥` generated from the random one-use private key `r`. This acts as a committment to `r`.
 */
export type BigNaturalNumber = string | number;
/**
 * The challenge `c` that is produced by hashing relevent parameters, including the original public key `h` and the one-time public key `k`.
 */
export type BigUint = string | number;
/**
 * The response `u = r + c s mod (p - 1)` to the challenge, where `r` is the one-time private key corresponding to the one-time public key `k`, and `s` is the private-key corresponding to the original public key `h`.
 */
export type BigUint1 = string | number;

/**
 * A non-interactive zero-knowledge proof of knowledge of a private key `s` corresponding to a public key `h`.
 */
export interface SchnorrProof {
  commitment: BigNaturalNumber;
  challenge: BigUint;
  response: BigUint1;
  [k: string]: any;
}
